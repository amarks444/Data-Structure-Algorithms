#include <stdio.h>
#include <stdlib.h>
#include <conio.h>
#define MAX 10


typedef struct
{  int data[MAX];
   int top;
}STACK;

void initialisation(STACK  *p)
{
   p->top = -1;
}
void push(STACK  *p,int data)
{ if(p->top == MAX-1)
    printf("\nStackOverflow\n");
  else
   p->data[++(p->top)] = data;
   return;

}
int is_Empty(STACK  p)
{
    if(p.top == -1)
      return 1;
    return 0;
}
int is_Full(STACK  p)
{
    if(p.top == MAX-1)
      return 1;
    return 0;
}
int  pop(STACK  *p)
{ if(p->top == -1)
  {
    printf("\nStackUnderflow\n");
    return -1;}
  else
   return p->data[(p->top)--];
}

void display(STACK s)
{   int i;
  for(i=0;i<=s.top;i++)
    printf("%d ",s.data[i]);
   printf("\n");
   return;
}
int main()
{   STACK s;
    int a=0,b,val;
    initialisation(&s);
    while(a!=-1)
    {   //clrscr();
       printf("\nEnter A/C to your Choice\n");
       printf("\nEnter '1' to Insert\n");
       printf("\nEnter '2' to Pop\n");
       printf("\nEnter '3' to check Empty\n");
       printf("\nEnter '4' to check Full\n");
       printf("\nEnter '5' to Display\n");
       printf("\nEnter '-1' to check Full\n");
       printf("\nEnter: ");
       scanf("%d",&b);
       switch(b)
       {  case 1:printf("\nEnter Data to Insert\n");
                 scanf("%d",&val);
                 push(&s,val);
                  break;
          case 2:

                 pop(&s);
                 printf("\nEnter Data Popped\n");
                  break;
          case 4: val = is_Full( s);
                  if(val==1)
                    printf("\nStack is Full\n");
                  else
                    printf("\nStack Has Some Space\n");
                  break;
         case 3: val = is_Empty( s);
                  if(val==1)
                    printf("\nStack is Empty\n");
                  else
                    printf("\nStack Has Some Data in it\n");
                  break;
         case 5:  printf("\n Stack elemnts are: \n");
                  display( s);
                  break;
         case -1:  printf("\n Empty \n");
                  break;
       }
    }
    return 0;
}
